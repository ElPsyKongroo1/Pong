void StartOnlineGame()
{
	PlayerSlot userSlot = NetworkService::GetActiveSessionSlot();
	if (userSlot == Enums::PlayerSlot.LeftPlayer)
	{
		InputService::LoadInputMap(InputMaps::Online_Player1_Runtime);
	}
	else if (userSlot == Enums::PlayerSlot.RightPlayer)
	{
		InputService::LoadInputMap(InputMaps::Online_Player2_Runtime);
	}
	UIService::DisplayWindow(UserInterfaces::RuntimeUI.pre_game_warning, false);
	UIService::DisplayWindow(UserInterfaces::RuntimeUI.online_lobby, false);
	UIService::DisplayWindow(UserInterfaces::RuntimeUI.base_window, true);
	entity player1 = SceneService::GetEntity("Player1");
	
	player1.Transform.SetTranslation(player1.InitialState.InitialPosition);
	
	entity player2 = SceneService::GetEntity("Player2");
	player2.Transform.SetTranslation(player2.InitialState.InitialPosition);
	
	entity ball = SceneService::GetEntity("Ball");
	ball.Transform.SetTranslation(ball.InitialState.InitialPosition);
	
	BallDirection ballDirection = GameStateService::GetFieldUInt16("BallDirection");
	vector2 velocity = {0.0f, 0.0f};
	if (ballDirection == Enums::BallDirection.Right)
	{
		velocity.x = -1.0f;
		GameStateService::SetField("BallDirection", Enums::BallDirection.Left);
	}
	else
	{
		velocity.x = 1.0f;
		GameStateService::SetField("BallDirection", Enums::BallDirection.Right);
	}
	
	ball.RigidBody.SetLinearVelocity(velocity * ball.Speed.CurrentSpeed);
}