void TopAndBottomWallCollision(entity ballEntity)
{
	vector2 horizontalDirection;
	vector2 currentVelocity = ballEntity.RigidBody.GetLinearVelocity();
	if (currentVelocity.x > 0.0f)
	{
		horizontalDirection = {1.0f, 0.0f};
	}
	else
	{
		horizontalDirection =  {-1.0f, 0.0f};
	}
	currentVelocity = Math::NormalizeVector2(Math::NormalizeVector2(currentVelocity) + horizontalDirection * 0.1f) * ballEntity.Speed.CurrentSpeed;
	ballEntity.RigidBody.SetLinearVelocity(currentVelocity);
	AudioService::PlaySound("Common/Audio/pop_sound.kgaudio");
}
