bool BallLocalMultiCollisionStart(entity currentEntity,entity otherEntity)
{
	bool collisionHandled = false;
	string otherEntityTag = otherEntity.Tag.GetTag();
	
	if (otherEntityTag == "Left Wall")
	{
		Scripts::CollideLeftWall(currentEntity);
		UIService::DisplayWindow("pre_game_warning", true);
		InputService::LoadInputMap(InputMaps::Pre_Start);
		collisionHandled = true;
	}
	else if (otherEntityTag == "Right Wall")
	{
		Scripts::CollideRightWall(currentEntity);
		UIService::DisplayWindow("pre_game_warning", true);
		InputService::LoadInputMap(InputMaps::Pre_Start);
		collisionHandled = true;
	}
	else if (otherEntityTag == "Top Wall" || otherEntityTag == "Bottom Wall")
	{
		Scripts::TopAndBottomWallCollision(currentEntity);
		collisionHandled = true;
	}
	
	else if (otherEntityTag == "Player1")
	{
		Scripts::CollidePlayer1(currentEntity);
		collisionHandled = true;
	}
	else if (otherEntityTag == "Player2")
	{
		Scripts::CollidePlayer2(currentEntity);
		collisionHandled = true;
	}
	
	return collisionHandled;
}